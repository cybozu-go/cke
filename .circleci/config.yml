version: 2.1
commands:
  run-mtest:
    description: "multi-host test"
    parameters:
      runtime:
        type: string
      suite:
        type: string
      target:
        type: string
        default: ""
    steps:
      - run:
          name: Store Service Account
          command: |
            echo $GCLOUD_SERVICE_ACCOUNT > account.json
            gcloud auth activate-service-account --key-file=account.json
      - run:
          name: Watch cke logs
          command: |
            if [ -f .skip ]; then exit 0; fi
            ./bin/watch_service cke
          background: true
      - run:
          command: |
            ./bin/run-mtest.sh <<parameters.runtime>> <<parameters.suite>> <<parameters.target>>
          no_output_timeout: 20m
      - run:
          name: delete instance
          command: |
            . ./bin/env
            $GCLOUD compute instances delete ${INSTANCE_NAME} --zone ${ZONE}
      - run:
          name: Clean up SSH keys generated by `gcloud compute`
          command: |
            gcloud --quiet --project neco-test compute project-info remove-metadata --keys=ssh-keys

jobs:
  build:
    docker:
      - image: quay.io/cybozu/golang:1.13-bionic
      - image: quay.io/coreos/etcd:v3.3
    working_directory: /work
    steps:
      - checkout
      - run:
          name: Check static resources
          command: |
            cp ./static/resources.go /tmp/resources.go
            make static
            cmp /tmp/resources.go ./static/resources.go
      - run:
          name: Check resource_apply.go
          command: |
            go install -mod=vendor ./pkg/apply_gen/
            cp resource_apply.go /tmp/resource_apply.go
            apply_gen
            diff -u /tmp/resource_apply.go resource_apply.go
      - run: make test GOBIN=/tmp/workspace
      - persist_to_workspace:
         root: /tmp/workspace
         paths:
           - cke
           - ckecli
  build-image:
    docker:
      - image: docker:stable
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Copy binaries
          command: |
            cp /tmp/workspace/cke docker
            cp /tmp/workspace/ckecli docker
      - setup_remote_docker
      - run:
          name: Build image
          command: |
            docker build -t quay.io/cybozu/cke:latest ./docker
      - run:
          name: Save image
          command: |
            mkdir -p /tmp/docker
            docker save quay.io/cybozu/cke:latest -o /tmp/docker/image
      - persist_to_workspace:
          root: /tmp/docker
          paths:
            - image
  push-image:
    docker:
      - image: docker:stable
    steps:
      - attach_workspace:
          at: /tmp/docker
      - setup_remote_docker
      - run: docker load -i /tmp/docker/image
      - run:
          name: Push docker image to Quay.io
          command: |
            docker login -u $QUAY_USER -p $QUAY_PASSWORD quay.io
            echo "pushing CKE image ..."
            TAG=$(echo $CIRCLE_TAG | cut -c 2-)
            docker tag quay.io/cybozu/cke:latest quay.io/cybozu/cke:$TAG
            docker push quay.io/cybozu/cke:$TAG
            if echo $TAG | grep -q -e - ; then
                echo ===== Skip pushing branch tags for pre-release $TAG =====
                exit 0
            fi
            BRANCH=$(echo $TAG | cut -d "." -f 1-2)
            docker tag quay.io/cybozu/cke:latest quay.io/cybozu/cke:$BRANCH
            docker push quay.io/cybozu/cke:$BRANCH
  mtest-containerd-functions:
    docker:
      - image: google/cloud-sdk
    steps:
      - checkout
      - run-mtest:
          runtime: remote
          suite: ./functions
  mtest-containerd-operators:
    docker:
      - image: google/cloud-sdk
    steps:
      - checkout
      - run-mtest:
          runtime: remote
          suite: ./operators
  mtest-containerd-robustness:
    docker:
      - image: google/cloud-sdk
    steps:
      - checkout
      - run-mtest:
          runtime: remote
          suite: ./robustness
  mtest-upgrade:
    docker:
      - image: google/cloud-sdk
    steps:
      - checkout
      - run-mtest:
          runtime: remote
          suite: ./upgrade
  mtest-docker-functions:
    docker:
      - image: google/cloud-sdk
    steps:
      - checkout
      - run-mtest:
          runtime: docker
          suite: ./functions
  compose:
    machine:
      image: circleci/classic:edge
    working_directory: ~/work/example
    steps:
      - checkout:
          path: ~/work
      - run:
          name: docker-compose build
          command: docker-compose build
      - run:
          name: docker-compose up
          command: docker-compose up -d
      - run:
          name: wait for docker-compose up
          command: ./wait-up.sh
      - run:
          name: run test
          command: docker-compose run setup /opt/setup/test.sh
      - run:
          name: docker-compose down
          command: docker-compose down
  sonobuoy:
    docker:
      - image: google/cloud-sdk
    steps:
      - checkout
      - run:
          name: Store Service Account
          command: |
            echo $GCLOUD_SERVICE_ACCOUNT > account.json
            gcloud auth activate-service-account --key-file=account.json
      - run:
          name: Run Sonobuoy
          command: ./bin/run-sonobuoy.sh
          no_output_timeout: 240m
      - persist_to_workspace:
         root: /tmp
         paths:
          - sonobuoy.tar.gz
  github-release:
    docker:
      - image: quay.io/cybozu/golang:1.13-bionic
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Prepare files
          command: |
            mkdir /tmp/upload
            cp /tmp/workspace/sonobuoy.tar.gz /tmp/upload
            tar xzf /tmp/workspace/sonobuoy.tar.gz -C /tmp/upload --strip-components=4 plugins/e2e/results/global/e2e.log plugins/e2e/results/global/junit_01.xml
            sed "s/vX\.Y\.Z/${CIRCLE_TAG}/" sonobuoy/README.md > /tmp/upload/README.md
            sed "s/vX\.Y\.Z/${CIRCLE_TAG}/" sonobuoy/PRODUCT.yaml > /tmp/upload/PRODUCT.yaml
      - run:
          name: Release to GitHub
          command: |
            prrelease=
            if echo ${CIRCLE_TAG} | grep -q -e -; then
              prerelease="-prerelease"
            fi
            ghr -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -n ${CIRCLE_TAG} $prerelease ${CIRCLE_TAG} /tmp/upload

workflows:
  version: 2
  main:
    jobs:
      - build
      - build-image:
          requires:
            - build
      - mtest-docker-functions
      - mtest-containerd-functions
      - mtest-containerd-operators
      - mtest-containerd-robustness
      - mtest-upgrade:
          filters:
            branches:
              ignore: ["master", "/release-.*/", "/bump-.*/"]
      - compose
  conformance:
    jobs:
      - hold:
          type: approval
      - sonobuoy:
          requires:
            - hold
  release-image:
    jobs:
      - build:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
      - build-image:
          requires:
            - build
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
      - push-image:
          requires:
            - build-image
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
  release-github:
    jobs:
      - sonobuoy:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
      - github-release:
          requires:
            - sonobuoy
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
